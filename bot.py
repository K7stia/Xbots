import tweepy
import openai
import os
import time
import threading
from flask import Flask
from dotenv import load_dotenv

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
load_dotenv()

# Twitter API –∫–ª—é—á—ñ
BEARER_TOKEN = os.getenv("BEARER_TOKEN")
API_KEY = os.getenv("API_KEY")
API_SECRET = os.getenv("API_SECRET")
ACCESS_TOKEN = os.getenv("ACCESS_TOKEN")
ACCESS_TOKEN_SECRET = os.getenv("ACCESS_TOKEN_SECRET")

# OpenAI API Key
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
openai.api_key = OPENAI_API_KEY

# –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Twitter API
client = tweepy.Client(
    bearer_token=BEARER_TOKEN,
    consumer_key=API_KEY,
    consumer_secret=API_SECRET,
    access_token=ACCESS_TOKEN,
    access_token_secret=ACCESS_TOKEN_SECRET
)

# Flask –¥–æ–¥–∞—Ç–æ–∫ –¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –ø–æ—Ä—Ç—É
app = Flask(__name__)

@app.route('/')
def index():
    return "Twitter Bot is Running"

# –°–ø–∏—Å–æ–∫ –≤–∂–µ –æ–±—Ä–æ–±–ª–µ–Ω–∏—Ö —Ç–≤—ñ—Ç—ñ–≤
processed_tweets = set()

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –∑–≥–∞–¥–∫–∏
def reply_to_mentions():
    while True:
        try:
            print("üîç Checking for new mentions...")
            mentions = client.get_users_mentions(id=client.get_me().data['id'])

            if mentions.data:
                print(f"Found {len(mentions.data)} mentions!")
                for mention in mentions.data:
                    tweet_id = mention.id
                    user_id = mention.author_id
                    tweet_text = mention.text
                    print(f"Processing mention from @{user_id}: {tweet_text}")

                    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ –≤—ñ–¥–ø–æ–≤—ñ–ª–∏ –Ω–∞ —Ü–µ–π —Ç–≤—ñ—Ç
                    if tweet_id in processed_tweets:
                        continue  # –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ, —è–∫—â–æ –≤–∂–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª–∏

                    # –§–æ—Ä–º—É—î–º–æ –∑–∞–ø–∏—Ç –¥–æ AI
                    ai_prompt = f"Reply in English as a crypto expert: {tweet_text}"
                    response = openai.ChatCompletion.create(
                        model="gpt-4",
                        messages=[
                            {"role": "system", "content": "You are a crypto expert. Always answer in English."},
                            {"role": "user", "content": ai_prompt}
                        ]
                    )
                    ai_response = response["choices"][0]["message"]["content"].strip()

                    # –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
                    client.create_tweet(text=f"@{user_id} {ai_response}", in_reply_to_tweet_id=tweet_id)
                    print(f"‚úÖ Replied to @{user_id}: {ai_response}")

                    # –î–æ–¥–∞—î–º–æ —Ç–≤—ñ—Ç —É —Å–ø–∏—Å–æ–∫ –æ–±—Ä–æ–±–ª–µ–Ω–∏—Ö
                    processed_tweets.add(tweet_id)

            else:
                print("No mentions found.")

            # –ß–µ–∫–∞—î–º–æ 5 —Ö–≤–∏–ª–∏–Ω –ø–µ—Ä–µ–¥ –Ω–∞—Å—Ç—É–ø–Ω–∏–º –∑–∞–ø–∏—Ç–æ–º
            print("‚è≥ Waiting 5 minutes before next check...")
            time.sleep(30)

        except tweepy.errors.TooManyRequests:
            print("‚ö†Ô∏è Too many requests! Waiting 15 minutes before retrying...")
            time.sleep(90)  # –ß–µ–∫–∞—î–º–æ 15 —Ö–≤–∏–ª–∏–Ω

        except Exception as e:
            print(f"Unexpected error: {e}")
            time.sleep(30)  # –ß–µ–∫–∞—î–º–æ 5 —Ö–≤–∏–ª–∏–Ω –ø–µ—Ä–µ–¥ –Ω–∞—Å—Ç—É–ø–Ω–æ—é —Å–ø—Ä–æ–±–æ—é

# –ó–∞–ø—É—Å–∫ Flask-—Å–µ—Ä–≤–µ—Ä–∞ —Ç–∞ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –∑–≥–∞–¥–∫–∏ –≤ –æ–∫—Ä–µ–º–æ–º—É –ø–æ—Ç–æ—Ü—ñ
if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ Flask
    threading.Thread(target=app.run, kwargs={"host": "0.0.0.0", "port": int(os.getenv("PORT", 10000))}).start()
    # –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü—ñ—ó –æ–±—Ä–æ–±–∫–∏ –∑–≥–∞–¥–æ–∫
    reply_to_mentions()
